<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="aMainUser">

	
   	<!-- 사원정보관리-목록 조회 -->
    <select id="aMainUserManageList" resultClass="retail.admin.service.AMainUserVO" parameterClass="retail.admin.service.AMainUserVO">
			
		SELECT 
			temp.* 
		FROM 
			(
			SELECT 
		    	org.* 
			,	ROWNUM ROW_SEQ 
			FROM 
				(
					SELECT 
	                       COUNT(*) OVER() AS TOTAL_CNT
	                  ,    A.*
	                  FROM (
	                     SELECT ROW_NUMBER() OVER( ORDER BY A.USER_NUM DESC ) AS RN_NUM
	                           , A.USER_NUM 			AS USER_NUM
	                           , A.USER_NAME			AS USER_NAME
	                           , A.DEPART_NUM		AS DEPART_NUM
	                           , B.DEPART_NAME		AS DEPART_NAME
	                           , SF_GET_COMM_NM('CD002', A.GRADE_NAME) AS GRADE_NAME
	                           , SF_GET_COMM_NM('CD003', A.DUTY_NAME) AS DUTY_NAME
	                           , A.UPUSER_NUM		AS UPUSER_NUM
	                           , C.USER_NAME 		AS UPUSER_NAME
	                           , A.USER_DATE			AS USER_DATE
	                           , A.USE_YN				AS USE_YN
	                      FROM USERS A
	                      		  , DEPARTS B
	                      		  , USERS C
	                     WHERE A.DEPART_NUM = B.DEPART_NUM(+)
	                         AND A.UPUSER_NUM = C.USER_NUM(+)
	                     <isNotEmpty property="DEPART_NUM">
	                      AND A.DEPART_NUM = #DEPART_NUM#
	                     </isNotEmpty>
	                     <isNotEmpty property="GRADE_NAME">
	                      AND A.GRADE_NAME = #GRADE_NAME#
	                     </isNotEmpty>
	                     <isNotEmpty property="DUTY_NAME">
	                      AND A.DUTY_NAME = #DUTY_NAME#
	                     </isNotEmpty>
	                     <isNotEmpty property="USER_NAME">
	                       AND A.USER_NAME LIKE '%' || #USER_NAME#  || '%'
	                     </isNotEmpty>
	                     <isNotEmpty property="USE_YN">
	                       AND A.USE_YN = #USE_YN#
	                     </isNotEmpty>
	                     ORDER BY A.USER_NUM DESC  
	                ) A
			) org 
			WHERE ROWNUM <![CDATA[<=]]> (#ROW_LIST# * #PAGE#)  <!-- ROW_LIST   10  30   50   100 --> 
		) temp 
		WHERE temp.ROW_SEQ <![CDATA[>]]> (#PAGE# * #ROW_LIST# ) - #ROW_LIST#   <!-- PAGE   0  10  20  30 -->
		<isNotEmpty property="SORTHEADER">
		ORDER BY $SORTHEADER$  $SORT$
		</isNotEmpty>
    </select>
    
    <!-- 목록 총 카운트 조회 -->
    <select id="aMainUserManageTotal" resultClass="retail.admin.service.AMainUserVO" parameterClass="retail.admin.service.AMainUserVO">
         
          SELECT COUNT(1) AS TOTAL_CNT
            FROM USERS A
            		  , DEPARTS B
            		  , USERS C
           WHERE A.DEPART_NUM = B.DEPART_NUM(+)
               AND A.UPUSER_NUM = C.USER_NUM(+)
           <isNotEmpty property="DEPART_NUM">
            AND A.DEPART_NUM = #DEPART_NUM#
           </isNotEmpty>
           <isNotEmpty property="GRADE_NAME">
            AND A.GRADE_NAME = #GRADE_NAME#
           </isNotEmpty>
           <isNotEmpty property="DUTY_NAME">
            AND A.DUTY_NAME = #DUTY_NAME#
           </isNotEmpty>
           <isNotEmpty property="USER_NAME">
             AND A.USER_NAME LIKE '%' || #USER_NAME#  || '%'
           </isNotEmpty>
           <isNotEmpty property="USE_YN">
             AND A.USE_YN = #USE_YN#
           </isNotEmpty>

    </select>
    
    <!-- 신규 사원코드 조회 -->
  	<select id="selectUserNum" parameterClass="retail.admin.service.AMainUserVO" resultClass="String" >
			SELECT	NVL(MAX(USER_NUM) + 1, 100) AS USER_NUM
			  FROM	USERS
  	</select>
  	<!-- MAX(DEPART_NUM) AS DEPART_NUM -->
    
    
    
    <!-- 사원정보관리-등록 -->
    <!-- MAX(USER_NUM) + 1 AS USER_NUM  -->
    <!-- <selectKey keyProperty="USER_NUM" resultClass="String">
			SELECT NVL(MAX(USER_NUM) + 1, 100) AS USER_NUM
			  FROM USERS 
	    </selectKey>  -->
	<insert id="insertAMainUser"  parameterClass="retail.admin.service.AMainUserVO">

		INSERT INTO USERS
		(
		    USER_NUM
		    , USER_NAME
		    , DEPART_NUM
		    , GRADE_NAME
		    , DUTY_NAME
		    , UPUSER_NUM
		    , UPUSER_NAME
		    , BE_UPUSER_NUM
		    , BE_UPUSER_NAME
		    , USER_DATE
		    , USE_YN
		    , IMG_NAME
		)
		VALUES
		(
		    #USER_NUM#
		    , #USER_NAME#
		    , #DEPART_NUM#
		    , #GRADE_NAME#
		    , #DUTY_NAME#
		    , #UPUSER_NUM#
		    , ( SELECT	USER_NAME
				 FROM	USERS
				WHERE	USER_NUM = #UPUSER_NUM#)
			, 0
		    , null
		    , TO_CHAR(SYSDATE,'YYYYMMDD')
		    , #USE_YN#
		    , #IMG_NAME#
		)

	</insert>
	
	<!-- 사원정보관리-수정 -->
	<!--  update id="updateAMainUser"  parameterClass="retail.admin.service.AMainUserVO">
		UPDATE	USERS
			 SET	USER_NAME = #USER_NAME#
				 ,	DEPART_NUM = #DEPART_NUM#
				 ,	GRADE_NAME = #GRADE_NAME#
				 ,	DUTY_NAME = #DUTY_NAME#
				 ,	UPUSER_NUM = #UPUSER_NUM#
				 ,	BE_UPUSER_NUM = UPUSER_NUM
				 ,	USE_YN = #USE_YN#
		WHERE USER_NUM = #USER_NUM#
	</update -->
	
	<update id="updateAMainUser"  parameterClass="retail.admin.service.AMainUserVO">
		UPDATE	USERS
			 SET	USER_NAME = #USER_NAME#
				 ,	DEPART_NUM = #DEPART_NUM#
				 ,	GRADE_NAME = 
				 	(
				 		SELECT	GRADE_ITEM_NUM
				 		   FROM	GRADE_ITEMS
				 		 WHERE	GRADE_ITEM_NAME = #GRADE_NAME#
				 	)
				 ,	DUTY_NAME = 
				 	(
				 		SELECT	GRADE_ITEM_NUM
				 		   FROM	GRADE_ITEMS
				 		 WHERE	GRADE_ITEM_NAME = #DUTY_NAME#
				 	) 
				 ,	UPUSER_NUM = NVL(	
					(	SELECT	USER_NUM
						   FROM	USERS
						 WHERE	USER_NAME = #UPUSER_NAME#
					), 0)
				 ,	UPUSER_NAME = #UPUSER_NAME#
				 ,	BE_UPUSER_NUM = UPUSER_NUM
				 ,	BE_UPUSER_NAME = UPUSER_NAME
				 ,	USE_YN = #USE_YN#
		WHERE USER_NUM = #USER_NUM#
	</update>
	
	<!-- 사원정보관리-상세조회 -->
    <select id="aMainUserManageDetail" resultClass="retail.admin.service.AMainUserVO" parameterClass="retail.admin.service.AMainUserVO">
		SELECT USER_NUM
		      	, USER_NAME
		       	, DEPART_NUM
		       	, GRADE_NAME
		       	, DUTY_NAME
		       	, UPUSER_NUM
		       	, USE_YN
		  FROM USERS
		 WHERE USER_NUM = #USER_NUM#
    </select>
     
     
     <!-- 사원정보관리-삭제 -->
     <update id="deleteAMainUser"  parameterClass="retail.admin.service.AMainUserVO">
		 		
		DELETE USERS
		 WHERE USER_NUM = #USER_NUM#
		
	</update>
	
	<!-- 추가한 사원의 평가기준정보 설정 - 부서가 없으면 기준값 복사 -->
	<insert id="insertUserEvalItem"  parameterClass="retail.admin.service.AMainUserVO">
		    INSERT	INTO EVAL_RATES   
		    (		
					 	USER_NUM
					 ,	EVAL_ITEM_NUM
					 ,	EVAL_ITEM_NAME
					 ,	EVAL_RATE
					 ,	USE_YN 
		    ) 
		    SELECT	
     				 	#USER_NUM#
     				 ,	EVAL_ITEM_NUM
					 ,	EVAL_ITEM_NAME
					 ,	EVAL_RATE
					 ,	USE_YN
			  FROM	EVAL_ITEM
			 WHERE	DEPART_NUM = #DEPART_NUM#
	</insert>
	
	<!-- 삭제하는 사원의 평가기준 삭제 -->			
	<delete id="deleteUserEvalItem"  parameterClass="retail.admin.service.AMainUserVO">
			DELETE	FROM EVAL_RATES 
			 WHERE	USER_NUM = #USER_NUM# 
	</delete>
	
	
</sqlMap>
